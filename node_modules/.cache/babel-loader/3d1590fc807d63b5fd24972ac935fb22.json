{"ast":null,"code":"var _jsxFileName = \"/Users/musicprogram/Documents/book interactive/src/components/games/question/ButtonsModalFinish.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryNavigation, resultTest } from \"../../../GlobalState\";\nimport { Modal } from \"react-bootstrap\";\nconst menuTestArray = [{\n  id: 5,\n  title: 'Concéntrese',\n  color: 1\n}, {\n  id: 4,\n  title: 'Selección múltiple',\n  color: 3\n}, {\n  id: 6,\n  title: 'Complete',\n  color: 2\n}];\n\nfunction ButtonsModalFinish(props) {\n  const category = useRecoilValue(categoryNavigation);\n  const [result, setResult] = useRecoilState(resultTest);\n  const [finish, setFinish] = useState(false);\n  useEffect(() => {\n    let items = [...result];\n    let foundIndex = result.findIndex(x => x.category === category);\n    let item = { ...items[foundIndex]\n    };\n    item.solve = true;\n    items[foundIndex] = item;\n    setResult(items);\n    let over = items.filter(x => x.solve === false);\n    setFinish(over.length === 0); //console.log(over)\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    hidden: finish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Continuar con las pruebas\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-row bd-highlight mb-3 btn-group btn-group-toggle\",\n    \"data-toggle\": \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, result.map(cat => {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      hidden: category === cat.category || cat.solve,\n      onClick: () => props.handleClick(cat.category),\n      className: `btn btn-light font-weight-bold color-${cat.color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      checked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), cat.title);\n  })));\n}\n\nexport default ButtonsModalFinish;","map":{"version":3,"sources":["/Users/musicprogram/Documents/book interactive/src/components/games/question/ButtonsModalFinish.js"],"names":["React","Fragment","useEffect","useState","useRecoilState","useRecoilValue","categoryNavigation","resultTest","Modal","menuTestArray","id","title","color","ButtonsModalFinish","props","category","result","setResult","finish","setFinish","items","foundIndex","findIndex","x","item","solve","over","filter","length","map","cat","handleClick"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport {categoryNavigation, resultTest} from \"../../../GlobalState\";\nimport {Modal} from \"react-bootstrap\";\n\nconst menuTestArray = [\n  {\n    id: 5, title: 'Concéntrese', color: 1\n  },\n  {\n    id: 4, title: 'Selección múltiple', color: 3\n  },\n  {\n    id: 6, title: 'Complete', color: 2\n  }\n]\n\nfunction ButtonsModalFinish(props) {\n  const category = useRecoilValue(categoryNavigation);\n  const [result, setResult] = useRecoilState(resultTest);\n  const [finish, setFinish] = useState(false);\n\n  useEffect(()=>{\n\n    let items = [...result];\n\n    let foundIndex = result.findIndex(x => x.category === category);\n    let item = {...items[foundIndex]};\n    item.solve = true;\n    items[foundIndex] = item;\n\n    setResult(items);\n\n    let over = items.filter(x => x.solve === false);\n    setFinish(over.length === 0)\n    //console.log(over)\n\n  },[])\n\n  return (\n    <Fragment>\n      <div hidden={finish}>\n        <hr/>\n        <p className=\"text-center\">\n          Continuar con las pruebas\n        </p>\n      </div>\n\n\n      <div className=\"d-flex flex-row bd-highlight mb-3 btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        {\n          result.map((cat)=>{\n            return(\n              <label\n                hidden={category === cat.category || cat.solve }\n                onClick={()=> props.handleClick(cat.category)}\n                className={`btn btn-light font-weight-bold color-${cat.color}`}>\n                <input type=\"radio\" name=\"options\" checked/>\n                {cat.title}\n              </label>\n            )\n          })\n        }\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default ButtonsModalFinish;\n"]},"metadata":{},"sourceType":"module"}