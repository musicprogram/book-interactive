{"ast":null,"code":"import React from 'react';\nimport { atom } from 'recoil';\nimport Links from \"./data/data_links\";\nimport dataLinks from './data/data_links';\nimport { completeInformationData } from './data/CompleteInformationData';\nimport { References } from './data/referencesData';\nconst arrImgBack = [Links[0].background, Links[0].modal, Links[1].background, Links[2].background, Links[3].background, Links[4].background, Links[5].background, completeInformationData[0].imgCss, completeInformationData[1].imgCss, completeInformationData[2].imgCss];\nexport const randomImg = () => {\n  const numAleatory = Math.floor(Math.random() * (10 - 0)) + 0;\n  return arrImgBack[numAleatory];\n};\nexport const speechText = (textValue, selectedVoiceName, synth) => {\n  /// var toSpeak = new SpeechSynthesisUtterance(txtInput.value);\n  let toSpeak = new SpeechSynthesisUtterance(textValue); //     var selectedVoiceName = voiceList.selectedOptions[0].getAttribute('data-name');\n\n  let voiCesChange = speechSynthesis.getVoices(); //console.log(voiCesChange)\n\n  voiCesChange.forEach(voice => {\n    if (voice.lang === 'en-US') {\n      toSpeak.voice = voice;\n    }\n  });\n  synth.speak(toSpeak);\n};\nexport const categoryNavigation = atom({\n  key: 'categoryNavigation',\n  // unique ID\n  default: 0 // default value\n\n});\nexport const currentStep = atom({\n  key: 'currentStep',\n  // unique ID\n  default: parseInt(localStorage.getItem(\"stepFormOne\")) ? parseInt(localStorage.getItem(\"stepFormOne\")) : 1 // default value\n\n});\nexport const currentStep1 = atom({\n  key: 'currentStep1',\n  // unique ID\n  default: parseInt(localStorage.getItem(\"stepFormSecond\")) ? parseInt(localStorage.getItem(\"stepFormSecond\")) : 1 // default value\n\n});\nexport const currentStep3 = atom({\n  key: 'currentStep3',\n  // unique ID\n  default: parseInt(localStorage.getItem(\"stepFormThird\")) ? parseInt(localStorage.getItem(\"stepFormThird\")) : 1 // default value\n\n});\nexport const synthGlobal = atom({\n  key: 'synthGlobal',\n  // unique ID\n  default: window.speechSynthesis // default value\n\n});\nexport const firstCategory = atom({\n  key: 'firstCategory',\n  // unique ID\n  default: [] // default value\n\n});\nexport const secondCategory = atom({\n  key: 'secondCategory',\n  // unique ID\n  default: [] // default value\n\n});\nexport const thirdCategory = atom({\n  key: 'thirdCategory',\n  // unique ID\n  default: [] // default value\n\n});\nexport const linksSvg = atom({\n  key: 'linksSvg',\n  // unique ID\n  default: dataLinks // default value\n\n});\nexport const color = atom({\n  key: 'color',\n  // unique ID\n  default: '#ffffff' // default value\n\n});\nconst resultData = [{\n  \"category\": 4,\n  \"solve\": false,\n  \"title\": 'Selección múltiple',\n  \"color\": 1\n}, {\n  \"category\": 6,\n  \"solve\": false,\n  \"title\": 'Complete',\n  \"color\": 3\n}, {\n  \"category\": 5,\n  \"solve\": false,\n  \"title\": 'Concéntrese',\n  \"color\": 2\n}];\nexport const resultTest = atom({\n  key: 'resultTest',\n  // unique ID\n  default: resultData // default value\n\n});\nexport const references = atom({\n  key: 'references',\n  // unique ID\n  default: References // default value\n\n});","map":{"version":3,"sources":["/Users/musicprogram/Documents/book interactive/src/GlobalState.js"],"names":["React","atom","Links","dataLinks","completeInformationData","References","arrImgBack","background","modal","imgCss","randomImg","numAleatory","Math","floor","random","speechText","textValue","selectedVoiceName","synth","toSpeak","SpeechSynthesisUtterance","voiCesChange","speechSynthesis","getVoices","forEach","voice","lang","speak","categoryNavigation","key","default","currentStep","parseInt","localStorage","getItem","currentStep1","currentStep3","synthGlobal","window","firstCategory","secondCategory","thirdCategory","linksSvg","color","resultData","resultTest","references"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {\n  atom\n} from 'recoil';\nimport Links from \"./data/data_links\";\n\n\nimport dataLinks from './data/data_links'\n\nimport {completeInformationData} from './data/CompleteInformationData';\n\nimport {References} from './data/referencesData'\n\nconst arrImgBack = [\n  Links[0].background,\n  Links[0].modal,\n  Links[1].background,\n  Links[2].background,\n  Links[3].background,\n  Links[4].background,\n  Links[5].background,\n  completeInformationData[0].imgCss,\n  completeInformationData[1].imgCss,\n  completeInformationData[2].imgCss\n]\n\nexport const randomImg = () =>{\n  const numAleatory = Math.floor(Math.random() * (10 - 0)) + 0;\n  return arrImgBack[numAleatory];\n}\n\nexport const speechText = (textValue, selectedVoiceName, synth) =>{\n  /// var toSpeak = new SpeechSynthesisUtterance(txtInput.value);\n  let toSpeak = new SpeechSynthesisUtterance(textValue);\n  //     var selectedVoiceName = voiceList.selectedOptions[0].getAttribute('data-name');\n  let voiCesChange = speechSynthesis.getVoices();\n  //console.log(voiCesChange)\n  voiCesChange.forEach((voice)=>{\n    if(voice.lang === 'en-US'){\n      toSpeak.voice = voice;\n    }\n  });\n\n  synth.speak(toSpeak);\n}\n\nexport const categoryNavigation = atom({\n  key: 'categoryNavigation', // unique ID\n  default: 0, // default value\n});\n\nexport const currentStep = atom({\n  key: 'currentStep', // unique ID\n  default: parseInt(localStorage.getItem(\"stepFormOne\")) ? parseInt(localStorage.getItem(\"stepFormOne\")) : 1, // default value\n});\n\nexport const currentStep1 = atom({\n  key: 'currentStep1', // unique ID\n  default: parseInt(localStorage.getItem(\"stepFormSecond\")) ? parseInt(localStorage.getItem(\"stepFormSecond\")) : 1, // default value\n});\n\nexport const currentStep3 = atom({\n  key: 'currentStep3', // unique ID\n  default: parseInt(localStorage.getItem(\"stepFormThird\")) ? parseInt(localStorage.getItem(\"stepFormThird\")) : 1, // default value\n});\n\nexport const synthGlobal = atom({\n  key: 'synthGlobal', // unique ID\n  default: window.speechSynthesis, // default value\n});\n\nexport const firstCategory = atom({\n  key: 'firstCategory', // unique ID\n  default: [], // default value\n});\n\nexport const secondCategory = atom({\n  key: 'secondCategory', // unique ID\n  default: [], // default value\n});\n\nexport const thirdCategory = atom({\n  key: 'thirdCategory', // unique ID\n  default: [], // default value\n});\n\nexport const linksSvg = atom({\n  key: 'linksSvg', // unique ID\n  default: dataLinks, // default value\n});\n\nexport const color = atom({\n  key: 'color', // unique ID\n  default: '#ffffff', // default value\n});\n\n\nconst resultData = [\n  {\n    \"category\":4,\n    \"solve\": false,\n    \"title\": 'Selección múltiple',\n    \"color\": 1\n  },\n  {\n    \"category\":6,\n    \"solve\": false,\n    \"title\": 'Complete',\n    \"color\": 3\n  },\n  {\n    \"category\":5,\n    \"solve\": false,\n    \"title\": 'Concéntrese',\n    \"color\": 2\n  }\n];\n\n\nexport const resultTest = atom({\n  key: 'resultTest', // unique ID\n  default: resultData, // default value\n});\nexport const references = atom({\n  key: 'references', // unique ID\n  default: References, // default value\n});\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}