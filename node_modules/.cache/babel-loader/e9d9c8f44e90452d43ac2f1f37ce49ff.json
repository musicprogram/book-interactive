{"ast":null,"code":"import _slicedToArray from\"/Users/musicprogram/Documents/book interactive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useEffect,useState,useRef}from'react';import Masonry,{ResponsiveMasonry}from\"react-responsive-masonry\";import Question from\"./Question\";import ModalFinish from\"./ModalFinish\";import{myQuestions,myQuestionsEnglish}from'../../../data/question_data';import{useRecoilState,useRecoilValue}from\"recoil\";import{categoryNavigation,linksSvg}from\"../../../GlobalState\";import CheckBoxLanguage from\"../CheckBoxLanguage\";import{imagesGameEnglish}from\"../../../data/memoryGameData\";function AlphabetSoupComponent(){var _useState=useState(myQuestions),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),newAnswers=_useState4[0],setNewAnswers=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),missingInfo=_useState6[0],setMissingInfo=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isComplete=_useState8[0],setIsComplete=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),show=_useState10[0],setShow=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),clicks=_useState12[0],setClicks=_useState12[1];var links=useRecoilValue(linksSvg);var _useRecoilState=useRecoilState(categoryNavigation),_useRecoilState2=_slicedToArray(_useRecoilState,2),category=_useRecoilState2[0],setCategory=_useRecoilState2[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),howManyTimes=_useState14[0],setHowManyTimes=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),english=_useState16[0],setEnglish=_useState16[1];var _useState17=useState(true),_useState18=_slicedToArray(_useState17,2),showMemory=_useState18[0],setShowMemory=_useState18[1];var list=useRef();useEffect(function(){var shuffle;if(english){shuffle=myQuestionsEnglish.sort(function(){return Math.random()-0.6;});setQuestions(shuffle);}else{shuffle=myQuestions.sort(function(){return Math.random()-0.6;});setQuestions(shuffle);}setQuestions(shuffle);},[english]);var handleSubmit=function handleSubmit(){var quantityClicks=clicks+1;setClicks(quantityClicks);var validateArr=[];var obj={};newAnswers.map(function(answer,i){questions.map(function(question,i){if(answer.question===question.id){if(answer.answer===question.correctAnswer){changeStyles(\"check-\".concat(question.id),\"black\");obj={question:answer.question,correct:true};validateArr.push(obj);}else{changeStyles(\"check-\".concat(question.id),\"red\",\"bold\");obj={question:answer.question,correct:false};validateArr.push(obj);}}});});var arr=validateArr.find(function(question){return question.correct===false;});//console.log(arr);\nif(arr){setIsComplete(false);}else{setIsComplete(true);setShow(true);}setHowManyTimes(howManyTimes+1);};var changeStyles=function changeStyles(css,color,bold){var x=document.getElementsByClassName(css);var i;for(i=0;i<x.length;i++){x[i].style.color=color;if(bold){x[i].style.fontWeight='bold';}else{x[i].style.fontWeight='';}}};var handleChange=function handleChange(e){setIsComplete(false);var question=parseInt(e.target.name);var answer=parseInt(e.target.value);var obj={question:question,answer:answer};var newAnswer=newAnswers;newAnswer=newAnswer.filter(function(el){return el.question!==question;});newAnswer.push(obj);setNewAnswers(newAnswer);if(newAnswer.length===questions.length){setMissingInfo(false);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"container animate__animated animate__fadeIn  animate__duration-3s\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"text-center text-capitalize mt-2 mb-3\"},/*#__PURE__*/React.createElement(\"span\",{className:\"font-weight-bold text-title-span-title mr-2\\n         color-3\\n          \"},english?'Multiple choice\\n':'SelecciÃ³n Multiple')),/*#__PURE__*/React.createElement(CheckBoxLanguage,{setEnglish:setEnglish,english:english,setShowMemory:setShowMemory}),showMemory&&/*#__PURE__*/React.createElement(\"div\",{className:\" mb-4 pb-4 pt-4 pl-4 animate__animated animate__fadeIn  animate__duration-3s\",ref:list},/*#__PURE__*/React.createElement(ResponsiveMasonry,{columnsCountBreakPoints:{350:1,600:2,900:3}},/*#__PURE__*/React.createElement(Masonry,null,questions.map(function(quiz,i){return/*#__PURE__*/React.createElement(Question,{howManyTimes:howManyTimes,handleChange:handleChange,category:category,quiz:quiz});}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:links[0].bannerQuestion,className:\"center-img-modal bg-light rounded\"})),/*#__PURE__*/React.createElement(\"button\",{onClick:handleSubmit,type:\"button\",disabled:missingInfo,className:\"btn btn-lg btn-block text-white mt-2 btn-dark\"},isComplete?'Muy Bien':'Enviar'),isComplete&&/*#__PURE__*/React.createElement(ModalFinish,{howManyTimes:howManyTimes,clicks:clicks,show:show,setShow:setShow})));}export default AlphabetSoupComponent;","map":{"version":3,"sources":["/Users/musicprogram/Documents/book interactive/src/components/games/question/QuestionMultipleAnswer.js"],"names":["React","Fragment","useEffect","useState","useRef","Masonry","ResponsiveMasonry","Question","ModalFinish","myQuestions","myQuestionsEnglish","useRecoilState","useRecoilValue","categoryNavigation","linksSvg","CheckBoxLanguage","imagesGameEnglish","AlphabetSoupComponent","questions","setQuestions","newAnswers","setNewAnswers","missingInfo","setMissingInfo","isComplete","setIsComplete","show","setShow","clicks","setClicks","links","category","setCategory","howManyTimes","setHowManyTimes","english","setEnglish","showMemory","setShowMemory","list","shuffle","sort","Math","random","handleSubmit","quantityClicks","validateArr","obj","map","answer","i","question","id","correctAnswer","changeStyles","correct","push","arr","find","css","color","bold","x","document","getElementsByClassName","length","style","fontWeight","handleChange","e","parseInt","target","name","value","newAnswer","filter","el","quiz","bannerQuestion"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,QAApC,CAA8CC,MAA9C,KAA2D,OAA3D,CACA,MAAOC,CAAAA,OAAP,EAAiBC,iBAAjB,KAAyC,0BAAzC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,OAAQC,WAAR,CAAqBC,kBAArB,KAA8C,6BAA9C,CACA,OAAQC,cAAR,CAAwBC,cAAxB,KAA6C,QAA7C,CACA,OAAQC,kBAAR,CAA4BC,QAA5B,KAA2C,sBAA3C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,CACA,OAAQC,iBAAR,KAAgC,8BAAhC,CAGA,QAASC,CAAAA,qBAAT,EAAiC,eACEd,QAAQ,CAACM,WAAD,CADV,wCACxBS,SADwB,eACdC,YADc,8BAEIhB,QAAQ,CAAC,EAAD,CAFZ,yCAExBiB,UAFwB,eAEbC,aAFa,8BAGOlB,QAAQ,CAAC,IAAD,CAHf,yCAGxBmB,WAHwB,eAGXC,cAHW,8BAIKpB,QAAQ,CAAC,KAAD,CAJb,yCAIxBqB,UAJwB,eAIZC,aAJY,8BAKPtB,QAAQ,CAAC,IAAD,CALD,0CAKxBuB,IALwB,gBAKlBC,OALkB,gCAMHxB,QAAQ,CAAC,CAAD,CANL,2CAMxByB,MANwB,gBAMhBC,SANgB,gBAO/B,GAAMC,CAAAA,KAAK,CAAGlB,cAAc,CAACE,QAAD,CAA5B,CAP+B,oBAUCH,cAAc,CAACE,kBAAD,CAVf,oDAUxBkB,QAVwB,qBAUdC,WAVc,qCAaS7B,QAAQ,CAAC,CAAD,CAbjB,2CAaxB8B,YAbwB,gBAaVC,eAbU,gCAeD/B,QAAQ,CAAC,KAAD,CAfP,2CAexBgC,OAfwB,gBAefC,UAfe,gCAgBKjC,QAAQ,CAAC,IAAD,CAhBb,2CAgBxBkC,UAhBwB,gBAgBZC,aAhBY,gBAmB/B,GAAMC,CAAAA,IAAI,CAAGnC,MAAM,EAAnB,CAGAF,SAAS,CAAC,UAAI,CACZ,GAAIsC,CAAAA,OAAJ,CACA,GAAGL,OAAH,CAAW,CACTK,OAAO,CAAG9B,kBAAkB,CAAC+B,IAAnB,CAAwB,iBAAMC,CAAAA,IAAI,CAACC,MAAL,GAAgB,GAAtB,EAAxB,CAAV,CACAxB,YAAY,CAACqB,OAAD,CAAZ,CACD,CAHD,IAGK,CACHA,OAAO,CAAG/B,WAAW,CAACgC,IAAZ,CAAiB,iBAAMC,CAAAA,IAAI,CAACC,MAAL,GAAgB,GAAtB,EAAjB,CAAV,CACAxB,YAAY,CAACqB,OAAD,CAAZ,CACD,CAEDrB,YAAY,CAACqB,OAAD,CAAZ,CACD,CAXQ,CAWP,CAACL,OAAD,CAXO,CAAT,CAaA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAI,CACvB,GAAIC,CAAAA,cAAc,CAAGjB,MAAM,CAAG,CAA9B,CACAC,SAAS,CAACgB,cAAD,CAAT,CACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,GAAG,CAAG,EAAV,CAEA3B,UAAU,CAAC4B,GAAX,CAAe,SAACC,MAAD,CAAQC,CAAR,CAAY,CACzBhC,SAAS,CAAC8B,GAAV,CAAc,SAACG,QAAD,CAAUD,CAAV,CAAc,CAC1B,GAAGD,MAAM,CAACE,QAAP,GAAoBA,QAAQ,CAACC,EAAhC,CAAmC,CAClC,GAAGH,MAAM,CAACA,MAAP,GAAkBE,QAAQ,CAACE,aAA9B,CAA4C,CAC1CC,YAAY,iBAAUH,QAAQ,CAACC,EAAnB,EAAyB,OAAzB,CAAZ,CACAL,GAAG,CAAG,CACJI,QAAQ,CAAEF,MAAM,CAACE,QADb,CAEJI,OAAO,CAAE,IAFL,CAAN,CAIAT,WAAW,CAACU,IAAZ,CAAiBT,GAAjB,EACD,CAPD,IAOK,CACHO,YAAY,iBAAUH,QAAQ,CAACC,EAAnB,EAAyB,KAAzB,CAAgC,MAAhC,CAAZ,CACAL,GAAG,CAAG,CACJI,QAAQ,CAAEF,MAAM,CAACE,QADb,CAEJI,OAAO,CAAE,KAFL,CAAN,CAIAT,WAAW,CAACU,IAAZ,CAAiBT,GAAjB,EACD,CACD,CACF,CAlBD,EAmBD,CApBD,EAuBA,GAAMU,CAAAA,GAAG,CAAGX,WAAW,CAACY,IAAZ,CAAiB,SAAAP,QAAQ,QAAIA,CAAAA,QAAQ,CAACI,OAAT,GAAqB,KAAzB,EAAzB,CAAZ,CACA;AACA,GAAGE,GAAH,CAAO,CACLhC,aAAa,CAAC,KAAD,CAAb,CACD,CAFD,IAEK,CACHA,aAAa,CAAC,IAAD,CAAb,CACAE,OAAO,CAAC,IAAD,CAAP,CACD,CACDO,eAAe,CAACD,YAAY,CAAG,CAAhB,CAAf,CACD,CAtCD,CAwCA,GAAMqB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACK,GAAD,CAAMC,KAAN,CAAaC,IAAb,CAAqB,CACxC,GAAIC,CAAAA,CAAC,CAAGC,QAAQ,CAACC,sBAAT,CAAgCL,GAAhC,CAAR,CACA,GAAIT,CAAAA,CAAJ,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGY,CAAC,CAACG,MAAlB,CAA0Bf,CAAC,EAA3B,CAA+B,CAC7BY,CAAC,CAACZ,CAAD,CAAD,CAAKgB,KAAL,CAAWN,KAAX,CAAmBA,KAAnB,CACA,GAAGC,IAAH,CAAQ,CACNC,CAAC,CAACZ,CAAD,CAAD,CAAKgB,KAAL,CAAWC,UAAX,CAAwB,MAAxB,CACD,CAFD,IAEK,CACHL,CAAC,CAACZ,CAAD,CAAD,CAAKgB,KAAL,CAAWC,UAAX,CAAwB,EAAxB,CACD,CAEF,CACF,CAZD,CAcA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAM,CACzB5C,aAAa,CAAC,KAAD,CAAb,CACA,GAAI0B,CAAAA,QAAQ,CAAGmB,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAvB,CACA,GAAIvB,CAAAA,MAAM,CAAGqB,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASE,KAAV,CAArB,CAEA,GAAM1B,CAAAA,GAAG,CAAG,CACVI,QAAQ,CAARA,QADU,CAEVF,MAAM,CAANA,MAFU,CAAZ,CAIA,GAAIyB,CAAAA,SAAS,CAAGtD,UAAhB,CAEAsD,SAAS,CAAGA,SAAS,CAACC,MAAV,CAAiB,SAASC,EAAT,CAAY,CACvC,MAAOA,CAAAA,EAAE,CAACzB,QAAH,GAAgBA,QAAvB,CACD,CAFW,CAAZ,CAIAuB,SAAS,CAAClB,IAAV,CAAeT,GAAf,EACA1B,aAAa,CAACqD,SAAD,CAAb,CAEA,GAAGA,SAAS,CAACT,MAAV,GAAqB/C,SAAS,CAAC+C,MAAlC,CAAyC,CACvC1C,cAAc,CAAC,KAAD,CAAd,CACD,CAEF,CAtBD,CAwBA,mBACE,2BAAK,SAAS,CAAC,mEAAf,eACE,0BAAI,SAAS,CAAC,uCAAd,eACI,4BAAM,SAAS,4EAAf,EAIIY,OAAO,CAAG,mBAAH,CAAwB,oBAJnC,CADJ,CADF,cAYE,oBAAC,gBAAD,EACE,UAAU,CAAEC,UADd,CAEE,OAAO,CAAED,OAFX,CAGE,aAAa,CAAEG,aAHjB,EAZF,CAoBID,UAAU,eAER,2BAAK,SAAS,CAAC,8EAAf,CAA8F,GAAG,CAAEE,IAAnG,eACE,oBAAC,iBAAD,EACE,uBAAuB,CAAE,CAAC,IAAK,CAAN,CAAS,IAAK,CAAd,CAAiB,IAAK,CAAtB,CAD3B,eAGE,oBAAC,OAAD,MAEIrB,SAAS,CAAC8B,GAAV,CAAc,SAAC6B,IAAD,CAAO3B,CAAP,CAAW,CACvB,mBACE,oBAAC,QAAD,EACE,YAAY,CAAEjB,YADhB,CAEE,YAAY,CAAEmC,YAFhB,CAGE,QAAQ,CAAErC,QAHZ,CAIE,IAAI,CAAE8C,IAJR,EADF,CAOD,CARD,CAFJ,CAHF,CADF,cAkBE,4CACE,2BAAK,GAAG,CAAE/C,KAAK,CAAC,CAAD,CAAL,CAASgD,cAAnB,CAAmC,SAAS,CAAC,mCAA7C,EADF,CAlBF,cAqBE,8BACE,OAAO,CAAElC,YADX,CAEE,IAAI,CAAC,QAFP,CAGE,QAAQ,CAAEtB,WAHZ,CAIE,SAAS,gDAJX,EAKGE,UAAU,CAAG,UAAH,CAAgB,QAL7B,CArBF,CA6BIA,UAAU,eACR,oBAAC,WAAD,EACE,YAAY,CAAES,YADhB,CAEE,MAAM,CAAEL,MAFV,CAGE,IAAI,CAAEF,IAHR,CAIE,OAAO,CAAEC,OAJX,EA9BN,CAtBN,CADF,CAqED,CAED,cAAeV,CAAAA,qBAAf","sourcesContent":["import React, {Fragment, useEffect, useState, useRef} from 'react';\nimport Masonry, {ResponsiveMasonry} from \"react-responsive-masonry\"\n\nimport Question from \"./Question\";\n\nimport ModalFinish from \"./ModalFinish\";\n\nimport {myQuestions, myQuestionsEnglish} from '../../../data/question_data'\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport {categoryNavigation, linksSvg} from \"../../../GlobalState\";\nimport CheckBoxLanguage from \"../CheckBoxLanguage\";\nimport {imagesGameEnglish} from \"../../../data/memoryGameData\";\n\n\nfunction AlphabetSoupComponent() {\n  const [questions,setQuestions] = useState(myQuestions);\n  const [newAnswers,setNewAnswers] = useState([]);\n  const [missingInfo, setMissingInfo] = useState(true);\n  const [isComplete, setIsComplete] = useState(false);\n  const [show, setShow] = useState(true);\n  const [clicks, setClicks] = useState(0);\n  const links = useRecoilValue(linksSvg);\n\n\n  const [category, setCategory] = useRecoilState(categoryNavigation);\n\n\n  const [howManyTimes, setHowManyTimes] = useState(0);\n\n  const [english, setEnglish] = useState(false);\n  const [showMemory, setShowMemory] = useState(true);\n\n\n  const list = useRef()\n\n\n  useEffect(()=>{\n    let shuffle;\n    if(english){\n      shuffle = myQuestionsEnglish.sort(() => Math.random() - 0.6);\n      setQuestions(shuffle);\n    }else{\n      shuffle = myQuestions.sort(() => Math.random() - 0.6);\n      setQuestions(shuffle);\n    }\n\n    setQuestions(shuffle);\n  },[english]);\n\n  const handleSubmit = ()=>{\n    let quantityClicks = clicks + 1;\n    setClicks(quantityClicks);\n    let validateArr = []\n    let obj = {}\n\n    newAnswers.map((answer,i)=>{\n      questions.map((question,i)=>{\n        if(answer.question === question.id){\n         if(answer.answer === question.correctAnswer){\n           changeStyles(`check-${question.id}`, \"black\");\n           obj = {\n             question: answer.question,\n             correct: true\n           }\n           validateArr.push(obj);\n         }else{\n           changeStyles(`check-${question.id}`, \"red\", \"bold\");\n           obj = {\n             question: answer.question,\n             correct: false\n           }\n           validateArr.push(obj);\n         }\n        }\n      })\n    })\n\n\n    const arr = validateArr.find(question => question.correct === false);\n    //console.log(arr);\n    if(arr){\n      setIsComplete(false);\n    }else{\n      setIsComplete(true);\n      setShow(true);\n    }\n    setHowManyTimes(howManyTimes + 1);\n  }\n\n  const changeStyles = (css, color, bold) =>{\n    let x = document.getElementsByClassName(css);\n    let i;\n    for (i = 0; i < x.length; i++) {\n      x[i].style.color = color;\n      if(bold){\n        x[i].style.fontWeight = 'bold';\n      }else{\n        x[i].style.fontWeight = '';\n      }\n\n    }\n  }\n\n  const handleChange = (e) =>{\n    setIsComplete(false);\n    let question = parseInt(e.target.name);\n    let answer = parseInt(e.target.value);\n\n    const obj = {\n      question,\n      answer\n    }\n    let newAnswer = newAnswers;\n\n    newAnswer = newAnswer.filter(function(el){\n      return el.question !== question;\n    });\n\n    newAnswer.push(obj);\n    setNewAnswers(newAnswer);\n\n    if(newAnswer.length === questions.length){\n      setMissingInfo(false);\n    }\n\n  }\n\n  return (\n    <div className=\"container animate__animated animate__fadeIn  animate__duration-3s\">\n      <h1 className=\"text-center text-capitalize mt-2 mb-3\">\n          <span className={`font-weight-bold text-title-span-title mr-2\n         color-3\n          `}>\n            {\n              english ? 'Multiple choice\\n': 'SelecciÃ³n Multiple'\n            }\n\n          </span>\n      </h1>\n\n      <CheckBoxLanguage\n        setEnglish={setEnglish}\n        english={english}\n        setShowMemory={setShowMemory}\n      />\n\n\n      {\n        showMemory && (\n\n          <div className=\" mb-4 pb-4 pt-4 pl-4 animate__animated animate__fadeIn  animate__duration-3s\" ref={list}>\n            <ResponsiveMasonry\n              columnsCountBreakPoints={{350: 1, 600: 2, 900: 3}}\n            >\n              <Masonry>\n                {\n                  questions.map((quiz, i)=>{\n                    return(\n                      <Question\n                        howManyTimes={howManyTimes}\n                        handleChange={handleChange}\n                        category={category}\n                        quiz={quiz}/>\n                    )\n                  })\n                }\n              </Masonry>\n            </ResponsiveMasonry>\n            <div>\n              <img src={links[0].bannerQuestion} className=\"center-img-modal bg-light rounded\"/>\n            </div>\n            <button\n              onClick={handleSubmit}\n              type=\"button\"\n              disabled={missingInfo}\n              className={`btn btn-lg btn-block text-white mt-2 btn-dark`}>\n              {isComplete ? 'Muy Bien' : 'Enviar'}\n            </button>\n            {\n              isComplete && (\n                <ModalFinish\n                  howManyTimes={howManyTimes}\n                  clicks={clicks}\n                  show={show}\n                  setShow={setShow}/>\n              )\n            }\n\n          </div>\n\n        )\n      }\n\n\n    </div>\n  );\n}\n\nexport default AlphabetSoupComponent;\n"]},"metadata":{},"sourceType":"module"}