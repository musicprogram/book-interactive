{"ast":null,"code":"import _slicedToArray from\"/Users/musicprogram/Documents/book interactive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import{completeInformationData,talkAnimation,completeInformationDataEnglish}from'../../../data/CompleteInformationData';import Helmet from'react-helmet';import SpeechRecognition,{useSpeechRecognition}from'react-speech-recognition';import ModalFinish from\"../question/ModalFinish\";import Complete from\"./Complete\";import Masonry,{ResponsiveMasonry}from\"react-responsive-masonry\";import{useRecoilValue}from\"recoil\";import{linksSvg}from\"../../../GlobalState\";import CheckBoxSpeech from'./CheckBoxSpeech';import CheckBoxLanguage from\"../CheckBoxLanguage\";import{imagesGame,imagesGameEnglish}from\"../../../data/memoryGameData\";import Help from\"../../help_introduction/Help\";function CompleteBoard(){var _useState=useState(completeInformationData),_useState2=_slicedToArray(_useState,2),completeInformations=_useState2[0],setCompleteInformations=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),body=_useState4[0],setBody=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),word=_useState6[0],setWord=_useState6[1];var _useState7=useState({word:'',id:0}),_useState8=_slicedToArray(_useState7,2),wordState=_useState8[0],setWordState=_useState8[1];var links=useRecoilValue(linksSvg);var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isOver=_useState10[0],setIsOver=_useState10[1];var _useSpeechRecognition=useSpeechRecognition(),transcript=_useSpeechRecognition.transcript,resetTranscript=_useSpeechRecognition.resetTranscript;var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),show=_useState12[0],setShow=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),clicks=_useState14[0],setClicks=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),workingSpeech=_useState16[0],setWorkingSpeech=_useState16[1];var _useState17=useState({text:'',infoId:'',word:'',body:''}),_useState18=_slicedToArray(_useState17,2),inputText=_useState18[0],setInputText=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),english=_useState20[0],setEnglish=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),showMemory=_useState22[0],setShowMemory=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),showHelp=_useState24[0],setShowHelp=_useState24[1];useEffect(function(){setBody(completeInformationData[0].imgCss);},[]);useEffect(function(){var shuffle;if(english){shuffle=completeInformationDataEnglish.sort(function(){return Math.random()-0.3;});}else{shuffle=completeInformationData.sort(function(){return Math.random()-0.3;});}setCompleteInformations(shuffle);},[english]);useEffect(function(){if(transcript){//console.log(transcript);\nsetWord(transcript);compareWord(transcript);}if(inputText.text&&inputText.text===inputText.word&&inputText.word){compareText();}},[transcript,inputText]);var compareText=function compareText(){setBody(inputText.body);var updateCompleteInformations=[];completeInformations.map(function(info){if(inputText.infoId===info.id){info.solve=true;}updateCompleteInformations.push(info);});var result=updateCompleteInformations.filter(function(info){return info.solve===true;});setIsOver(result.length===completeInformations.length);setCompleteInformations(updateCompleteInformations);};var compareWord=function compareWord(word){var updateCompleteInformations=[];var comp=false;comp=word&&wordState.word&&word===wordState.word;if(comp){completeInformations.map(function(info){if(wordState.id===info.id){info.solve=true;info.imgTalk=talkAnimation[0].img1;}updateCompleteInformations.push(info);});var result=updateCompleteInformations.filter(function(info){return info.solve===true;});setIsOver(result.length===completeInformations.length);setCompleteInformations(updateCompleteInformations);}else{completeInformations.map(function(info){if(wordState.id===info.id){info.solve=false;info.imgTalk=talkAnimation[0].img4;}updateCompleteInformations.push(info);});setCompleteInformations(updateCompleteInformations);}};var speech=function speech(){SpeechRecognition.startListening();};return/*#__PURE__*/React.createElement(\"div\",{className:\"background-complete animate__animated animate__fadeIn  animate__duration-3s\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container \"},/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"body\",null),/*#__PURE__*/React.createElement(\"style\",null,\"\\n                .background-complete {\\n                    background-color: #780116 !important;\\n                    background-image : url(\\\"data:image/svg+xml,%3Csvg width='52' height='26' viewBox='0 0 52 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.08'%3E%3Cpath d='M10 10c0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6h2c0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4v2c-3.314 0-6-2.686-6-6 0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6zm25.464-1.95l8.486 8.486-1.414 1.414-8.486-8.486 1.414-1.414z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\"),  \\n                     url(\\\"\".concat(body,\"\\\")\\n                }\\n             \"))),/*#__PURE__*/React.createElement(\"h1\",{className:\"text-center text-capitalize mt-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"font-weight-bold text-title-span-title mr-2 \\n         color-2\\n          \"},english?'Complete':'Completar')),/*#__PURE__*/React.createElement(CheckBoxLanguage,{setEnglish:setEnglish,english:english,setShowMemory:setShowMemory}),/*#__PURE__*/React.createElement(\"div\",null,showMemory&&/*#__PURE__*/React.createElement(ResponsiveMasonry,{className:\"animate__animated animate__fadeIn  animate__duration-3s\",columnsCountBreakPoints:{350:1,600:2}},/*#__PURE__*/React.createElement(Masonry,null,completeInformations.map(function(info,i){return/*#__PURE__*/React.createElement(Complete,{info:info,key:i,setBody:setBody,setWordState:setWordState,speechRecognition:speech,workingSpeech:workingSpeech,setInputText:setInputText,english:english});}))))),isOver&&/*#__PURE__*/React.createElement(ModalFinish,{show:show,setShow:setShow,clicks:clicks}),showHelp&&/*#__PURE__*/React.createElement(Help,{setShowHelp:setShowHelp,showHelp:showHelp}));}export default CompleteBoard;","map":{"version":3,"sources":["/Users/musicprogram/Documents/book interactive/src/components/games/complete_information/CompleteBoard.js"],"names":["React","useEffect","useState","useRef","completeInformationData","talkAnimation","completeInformationDataEnglish","Helmet","SpeechRecognition","useSpeechRecognition","ModalFinish","Complete","Masonry","ResponsiveMasonry","useRecoilValue","linksSvg","CheckBoxSpeech","CheckBoxLanguage","imagesGame","imagesGameEnglish","Help","CompleteBoard","completeInformations","setCompleteInformations","body","setBody","word","setWord","id","wordState","setWordState","links","isOver","setIsOver","transcript","resetTranscript","show","setShow","clicks","setClicks","workingSpeech","setWorkingSpeech","text","infoId","inputText","setInputText","english","setEnglish","showMemory","setShowMemory","showHelp","setShowHelp","imgCss","shuffle","sort","Math","random","compareWord","compareText","updateCompleteInformations","map","info","solve","push","result","filter","length","comp","imgTalk","img1","img4","speech","startListening","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef} from 'react';\nimport {completeInformationData, talkAnimation, completeInformationDataEnglish} from '../../../data/CompleteInformationData';\nimport Helmet from 'react-helmet';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport ModalFinish from \"../question/ModalFinish\";\n\nimport Complete from \"./Complete\";\nimport Masonry, {ResponsiveMasonry} from \"react-responsive-masonry\"\nimport {useRecoilValue} from \"recoil\";\nimport {linksSvg} from \"../../../GlobalState\";\n\nimport CheckBoxSpeech from './CheckBoxSpeech';\n\nimport CheckBoxLanguage from \"../CheckBoxLanguage\";\nimport {imagesGame, imagesGameEnglish} from \"../../../data/memoryGameData\";\nimport Help from \"../../help_introduction/Help\";\n\nfunction CompleteBoard() {\n  const [completeInformations, setCompleteInformations] = useState(completeInformationData);\n  const [body, setBody] = useState('');\n  const [word, setWord] = useState('');\n  const [wordState, setWordState] = useState({\n    word: '',\n    id: 0\n  });\n  const links = useRecoilValue(linksSvg);\n  const [isOver, setIsOver] = useState(false);\n\n  const { transcript, resetTranscript } = useSpeechRecognition();\n\n  const [show, setShow] = useState(true);\n  const [clicks, setClicks] = useState(0);\n\n  const [workingSpeech, setWorkingSpeech] = useState(false);\n  const [inputText, setInputText] = useState({\n    text : '',\n    infoId : '',\n    word: '',\n    body: ''\n  });\n  const [english, setEnglish] = useState(false);\n  const [showMemory, setShowMemory] = useState(true);\n  const [showHelp, setShowHelp] = useState(false);\n\n  useEffect(()=>{\n    setBody(completeInformationData[0].imgCss);\n  },[])\n\n\n  useEffect(()=>{\n    let shuffle;\n    if(english){\n      shuffle = completeInformationDataEnglish.sort(() => Math.random() - 0.3)\n    }else{\n      shuffle = completeInformationData.sort(() => Math.random() - 0.3)\n    }\n    setCompleteInformations(shuffle);\n  },[english])\n\n  useEffect(()=>{\n\n  if(transcript){\n    //console.log(transcript);\n    setWord(transcript);\n    compareWord(transcript);\n  }\n\n  if(\n    inputText.text &&\n    inputText.text === inputText.word &&\n    inputText.word){\n      compareText()\n  }\n\n  },[transcript, inputText]);\n\n  const compareText = () =>{\n    setBody(inputText.body)\n    const updateCompleteInformations = []\n\n    completeInformations.map((info)=>{\n      if(inputText.infoId === info.id){\n        info.solve = true;\n      }\n      updateCompleteInformations.push(info)\n    })\n\n    const result = updateCompleteInformations.filter(info => info.solve === true);\n    setIsOver(result.length === completeInformations.length);\n\n    setCompleteInformations(updateCompleteInformations);\n\n  };\n\n  const compareWord = (word) =>{\n    let updateCompleteInformations = [];\n\n      let comp = false;\n\n      comp = (word && wordState.word) && (word === wordState.word);\n\n\n      if(comp){\n\n        completeInformations.map((info)=>{\n          if(wordState.id === info.id){\n            info.solve = true;\n            info.imgTalk = talkAnimation[0].img1\n          }\n          updateCompleteInformations.push(info)\n        })\n\n        const result = updateCompleteInformations.filter(info => info.solve === true);\n        setIsOver(result.length === completeInformations.length);\n\n        setCompleteInformations(updateCompleteInformations);\n      }else{\n        completeInformations.map((info)=>{\n          if(wordState.id === info.id){\n            info.solve = false;\n            info.imgTalk = talkAnimation[0].img4\n          }\n          updateCompleteInformations.push(info)\n        })\n\n        setCompleteInformations(updateCompleteInformations);\n      }\n\n  }\n\n  const speech = ()=>{\n    SpeechRecognition.startListening()\n  }\n\n  return (\n     <div className=\"background-complete animate__animated animate__fadeIn  animate__duration-3s\">\n       <div className=\"container \">\n         <Helmet>\n           {/* Define inline CSS for body tag */}\n           <body/>\n           {/* Or include in-file CSS */}\n           <style>\n             {`\n                .background-complete {\n                    background-color: #780116 !important;\n                    background-image : url(\"data:image/svg+xml,%3Csvg width='52' height='26' viewBox='0 0 52 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.08'%3E%3Cpath d='M10 10c0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6h2c0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4v2c-3.314 0-6-2.686-6-6 0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6zm25.464-1.95l8.486 8.486-1.414 1.414-8.486-8.486 1.414-1.414z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"),  \n                     url(\"${body}\")\n                }\n             `}\n           </style>\n         </Helmet>\n\n         <h1 className=\"text-center text-capitalize mt-2\">\n          <span className={`font-weight-bold text-title-span-title mr-2 \n         color-2\n          `}>\n            {english ? 'Complete' : 'Completar'}\n          </span>\n         </h1>\n\n\n         <CheckBoxLanguage\n           setEnglish={setEnglish}\n           english={english}\n           setShowMemory={setShowMemory}\n\n         />\n\n\n\n          <div>\n            {\n              showMemory && (\n                <ResponsiveMasonry\n                  className='animate__animated animate__fadeIn  animate__duration-3s'\n                  columnsCountBreakPoints={{350: 1, 600: 2}}\n                >\n                  <Masonry>\n                    {\n                      completeInformations.map((info, i)=>{\n                        return(\n                          <Complete\n                            info={info}\n                            key={i}\n                            setBody={setBody}\n                            setWordState={setWordState}\n                            speechRecognition={speech}\n                            workingSpeech={workingSpeech}\n                            setInputText={setInputText}\n                            english={english}\n                          />\n                        )\n                      })\n                    }\n                  </Masonry>\n                </ResponsiveMasonry>\n              )\n            }\n\n\n          </div>\n\n       </div>\n\n       {\n         isOver && (\n           <ModalFinish\n             show={show}\n             setShow={setShow}\n             clicks={clicks}\n           />\n         )\n       }\n\n       {\n         showHelp && (\n           <Help\n              setShowHelp={setShowHelp}\n              showHelp={showHelp}\n           />\n         )\n\n       }\n     </div>\n  );\n}\n\nexport default CompleteBoard;\n"]},"metadata":{},"sourceType":"module"}